<!doctype html>
<html lang="es">
<head>
  <meta charset="utf-8"/>
  <meta name="viewport" content="width=device-width, initial-scale=1"/>
  <title>Unik Bikes — Sistema (Vista previa)</title>
  <meta name="theme-color" content="#000000"/>
  <style>
    html,body,#root{height:100%} body{margin:0;font-family:system-ui,-apple-system,Segoe UI,Roboto,Ubuntu,Cantarell,Noto Sans,sans-serif;background:#f8fafc;color:#111827}
    .border{border:1px solid #e5e7eb} .rounded-xl{border-radius:0.75rem} .rounded-2xl{border-radius:1rem}
    .px-3{padding-left:0.75rem;padding-right:0.75rem} .px-4{padding-left:1rem;padding-right:1rem}
    .py-2{padding-top:0.5rem;padding-bottom:0.5rem} .p-3{padding:0.75rem} .p-4{padding:1rem} .p-6{padding:1.5rem}
    .mt-1{margin-top:0.25rem} .mb-2{margin-bottom:0.5rem} .mb-3{margin-bottom:0.75rem} .mb-4{margin-bottom:1rem}
    .mx-auto{margin-left:auto;margin-right:auto} .text-xs{font-size:0.75rem;color:#6b7280} .text-sm{font-size:0.875rem}
    .text-lg{font-size:1.125rem} .text-xl{font-size:1.25rem} .font-semibold{font-weight:600} .font-bold{font-weight:700} .font-medium{font-weight:500}
    .grid{display:grid} .flex{display:flex} .gap-2{gap:0.5rem} .gap-3{gap:0.75rem} .items-center{align-items:center} .justify-between{justify-content:space-between} .justify-end{justify-content:flex-end}
    .w-full{width:100%} .w-40{width:10rem} .min-w-full{min-width:100%} .overflow-auto{overflow:auto} .hover\:bg-gray-50:hover{background:#f9fafb}
    .bg-white{background:#fff} .bg-white\/80{background:rgba(255,255,255,0.8)} .bg-black{background:#000;color:#fff} .bg-gray-50{background:#f9fafb}
    .text-white{color:#fff} .text-gray-500{color:#6b7280} .text-gray-600{color:#4b5563} .text-gray-900{color:#111827}
    .size-9{width:2.25rem;height:2.25rem} .shadow-xl{box-shadow:0 20px 25px -5px rgba(0,0,0,0.1),0 8px 10px -6px rgba(0,0,0,0.1)}
    .sticky{position:sticky} .top-0{top:0} .z-40{z-index:40} .backdrop-blur{backdrop-filter:blur(8px)} .max-w-7xl{max-width:80rem} .px-4{padding-left:1rem;padding-right:1rem} .py-4{padding-top:1rem;padding-bottom:1rem} .pb-24{padding-bottom:6rem} .pt-4{padding-top:1rem}
    .border-t{border-top:1px solid #e5e7eb} .text-right{text-align:right} .uppercase{text-transform:uppercase;letter-spacing:.04em} .outline-none{outline:0} .focus\:ring-2:focus{box-shadow:0 0 0 2px rgba(0,0,0,0.1)}
    .grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))} .sm\:grid-cols-2{grid-template-columns:repeat(1,minmax(0,1fr))}
    @media(min-width:640px){.sm\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.sm\:items-center{align-items:center}.sm\:justify-between{justify-content:space-between}}
    @media(min-width:1024px){.lg\:grid-cols-5{grid-template-columns:repeat(5,minmax(0,1fr))}}
    table{border-collapse:separate;border-spacing:0;width:100%} th,td{border-color:#e5e7eb} th{font-weight:600} .cursor-pointer{cursor:pointer} .whitespace-nowrap{white-space:nowrap}
  </style>
</head>
<body>
  <div id="root"></div>
  <script src="https://unpkg.com/react@18/umd/react.development.js" crossorigin></script>
  <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js" crossorigin></script>
  <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
  <script type="text/babel">
  const { useState, useMemo, useEffect } = React;
  const LS_KEY = "bikeShopDataV1";
  const uid = () => (window.crypto?.randomUUID?.() ?? 'id_' + Date.now() + '_' + Math.random().toString(36).slice(2,8));
  const currency = (n) => (isFinite(n) ? n.toLocaleString('es-AR', { style:'currency', currency:'ARS', maximumFractionDigits:0 }) : '—');
  function download(filename, text) { const a=document.createElement('a'); a.href=URL.createObjectURL(new Blob([text],{type:'text/plain'})); a.download=filename; a.click(); }
  function parseNumber(v, fallback=0){ const n = Number(String(v).replace(/,/g,'.').replace(/[^0-9.\-]/g,'')); return Number.isFinite(n)?n:fallback; }
  function exportCSV(rows, filename='export.csv'){ const csv = rows.map(r => r.map(c => `"${String(c ?? '').replace(/"/g,'""')}"`).join(',')).join('\n'); download(filename, csv); }

  function useStore(){
    const [products,setProducts] = useState([]);
    const [movements,setMovements] = useState([]);
    useEffect(()=>{ try{ const raw=localStorage.getItem(LS_KEY); if(raw){ const p=JSON.parse(raw); setProducts(p.products??[]); setMovements(p.movements??[]);} }catch(e){} },[]);
    useEffect(()=>{ localStorage.setItem(LS_KEY, JSON.stringify({products,movements})); },[products,movements]);
    function upsertProduct(p){ setProducts(prev=>{ const i=prev.findIndex(x=>x.id===p.id); if(i>=0){ const n=[...prev]; n[i]=p; return n;} return [p,...prev];});}
    function deleteProduct(id){ setProducts(prev=>prev.filter(p=>p.id!==id)); }
    function addMovement(m){ setMovements(prev=>[m,...prev]); setProducts(prev=>{ const i=prev.findIndex(x=>x.id===m.productId); if(i<0)return prev; const next=[...prev]; const prod={...next[i]}; if(m.type==='Entrada'){ prod.stock+=m.quantity; } else { prod.stock=Math.max(0, prod.stock-m.quantity);} next[i]=prod; return next;});}
    return {products,movements,upsertProduct,deleteProduct,addMovement,setProducts,setMovements};
  }
  function Badge({children,className=''}){ return <span className={'inline-block rounded-xl px-3 py-2 border text-xs '+className}>{children}</span> }
  function Modal({open,onClose,title,children,size='max-w-2xl'}){ if(!open)return null; return <div className="fixed inset-0 z-50 flex items-center justify-center" style={{background:'rgba(0,0,0,.4)'}} onClick={onClose}><div className={'w-full '+size+' rounded-2xl bg-white p-4 shadow-xl'} onClick={e=>e.stopPropagation()}><div className="flex items-center justify-between mb-3"><h3 className="text-lg font-semibold">{title}</h3><button className="px-3 py-2 rounded-xl hover:bg-gray-50" onClick={onClose}>✕</button></div>{children}</div></div>; }
  function Input({label,type='text',value,onChange,placeholder='',step,min}){ return <label className="block mb-2"><span className="text-xs uppercase">{label}</span><input className="mt-1 w-full rounded-xl border px-3 py-2 outline-none focus:ring-2" type={type} value={value} onChange={e=>onChange(e.target.value)} placeholder={placeholder} step={step} min={min}/></label>; }
  const NumberInput=(p)=><Input {...p} type="number" step={p.step??'0.01'}/>;
  function ProductForm({ initial, onSubmit, onCancel }){ const [sku,setSku]=useState(initial?.sku ?? ''); const [name,setName]=useState(initial?.name ?? ''); const [category,setCategory]=useState(initial?.category ?? ''); const [supplier,setSupplier]=useState(initial?.supplier ?? ''); const [cost,setCost]=useState(String(initial?.cost ?? '')); const [price,setPrice]=useState(String(initial?.price ?? '')); const [stock,setStock]=useState(String(initial?.stock ?? 0)); const [minStock,setMinStock]=useState(String(initial?.minStock ?? 0)); const [notes,setNotes]=useState(initial?.notes ?? ''); return <form onSubmit={(e)=>{e.preventDefault(); onSubmit({id:initial?.id ?? uid(), sku:sku.trim(), name:name.trim(), category:category.trim(), supplier:supplier.trim(), cost:parseNumber(cost), price:parseNumber(price), stock:Math.max(0,Math.floor(parseNumber(stock))), minStock:Math.max(0,Math.floor(parseNumber(minStock))), notes:notes.trim()});}} className="grid sm:grid-cols-2 gap-3"><Input label="SKU / Código" value={sku} onChange={setSku}/><Input label="Nombre" value={name} onChange={setName}/><Input label="Categoría" value={category} onChange={setCategory} placeholder="Cámaras / Cubiertas / Frenos..."/><Input label="Proveedor" value={supplier} onChange={setSupplier}/><NumberInput label="Costo (ARS)" value={cost} onChange={setCost}/><NumberInput label="Precio (ARS)" value={price} onChange={setPrice}/><NumberInput label="Stock" value={stock} onChange={setStock} step="1"/><NumberInput label="Stock mínimo" value={minStock} onChange={setMinStock} step="1"/><label className="sm:col-span-2 block"><span className="text-xs uppercase">Notas</span><textarea className="mt-1 w-full rounded-xl border px-3 py-2" rows="3" value={notes} onChange={e=>setNotes(e.target.value)} /></label><div className="sm:col-span-2 flex gap-2 justify-end"><button type="button" onClick={onCancel} className="px-4 py-2 rounded-xl border hover:bg-gray-50">Cancelar</button><button type="submit" className="px-4 py-2 rounded-xl bg-black">Guardar</button></div></form>; }
  function MovementForm({ products, onSubmit, onCancel, defaultType='Salida' }){ const [productId,setProductId]=useState(products[0]?.id ?? ''); const [type,setType]=useState(defaultType); const [quantity,setQuantity]=useState('1'); const [unitPrice,setUnitPrice]=useState(''); const [dateISO,setDateISO]=useState(new Date().toISOString().slice(0,16)); const [reference,setReference]=useState(''); const [notes,setNotes]=useState(''); useEffect(()=>{ if(!productId && products[0]) setProductId(products[0].id); },[products,productId]); return <form onSubmit={(e)=>{e.preventDefault(); onSubmit({id:uid(), productId, type, quantity:Math.max(1,Math.floor(parseNumber(quantity,1))), unitPrice:parseNumber(unitPrice,0), dateISO:new Date(dateISO).toISOString(), reference:reference.trim(), notes:notes.trim()});}} className="grid sm:grid-cols-2 gap-3"><label className="block"><span className="text-xs uppercase">Producto</span><select className="mt-1 w-full rounded-xl border px-3 py-2" value={productId} onChange={e=>setProductId(e.target.value)}>{products.map(p=><option key={p.id} value={p.id}>{p.sku? p.sku+' — ':''}{p.name}</option>)}</select></label><label className="block"><span className="text-xs uppercase">Tipo</span><select className="mt-1 w-full rounded-xl border px-3 py-2" value={type} onChange={e=>setType(e.target.value)}><option>Entrada</option><option>Salida</option></select></label><NumberInput label="Cantidad" value={quantity} onChange={setQuantity} step="1"/><NumberInput label="Precio Unit. (opcional)" value={unitPrice} onChange={setUnitPrice}/><Input label="Fecha" type="datetime-local" value={dateISO} onChange={setDateISO}/><Input label="Referencia (cliente/factura)" value={reference} onChange={setReference}/><label className="sm:col-span-2 block"><span className="text-xs uppercase">Notas</span><textarea className="mt-1 w-full rounded-xl border px-3 py-2" rows="3" value={notes} onChange={e=>setNotes(e.target.value)}/></label><div className="sm:col-span-2 flex gap-2 justify-end"><button type="button" onClick={onCancel} className="px-4 py-2 rounded-xl border hover:bg-gray-50">Cancelar</button><button type="submit" className="px-4 py-2 rounded-xl bg-black">Registrar</button></div></form>; }
  function InventoryTable({ products, onEdit, onDelete, search, setSearch, categoryFilter, setCategoryFilter }){ const categories=useMemo(()=>Array.from(new Set(products.map(p=>p.category).filter(Boolean))).sort(),[products]); const filtered=useMemo(()=>{ const q=search.trim().toLowerCase(); return products.filter(p=>{ const matchesText=!q || [p.sku,p.name,p.category,p.supplier].some(x=>x?.toLowerCase().includes(q)); const matchesCat=!categoryFilter || p.category===categoryFilter; return matchesText && matchesCat; }); },[products,search,categoryFilter]); return <div className="space-y-3"><div className="flex gap-2 sm:items-center sm:justify-between"><div className="flex gap-2 w-full"><input className="w-full rounded-xl border px-3 py-2" placeholder="Buscar por SKU, nombre, categoría, proveedor" value={search} onChange={e=>setSearch(e.target.value)}/><select className="w-40 rounded-xl border px-3 py-2" value={categoryFilter} onChange={e=>setCategoryFilter(e.target.value)}><option value="">Todas las categorías</option>{categories.map(c=><option key={c}>{c}</option>)}</select></div></div><div className="overflow-auto rounded-2xl border"><table className="min-w-full text-sm"><thead className="bg-gray-50"><tr className="text-left"><th className="p-3">SKU</th><th className="p-3">Producto</th><th className="p-3">Categoría</th><th className="p-3">Proveedor</th><th className="p-3">Costo</th><th className="p-3">Precio</th><th className="p-3">Stock</th><th className="p-3">Mín.</th><th className="p-3">Margen</th><th className="p-3 text-right">Acciones</th></tr></thead><tbody>{filtered.map(p=>{ const margin=p.price>0?((p.price-p.cost)/p.price)*100:0; const low=p.stock<=p.minStock; return <tr key={p.id} className={'border-t '+(low?'bg-gray-50':'')}><td className="p-3">{p.sku}</td><td className="p-3">{p.name}</td><td className="p-3"><Badge>{p.category||'—'}</Badge></td><td className="p-3">{p.supplier||'—'}</td><td className="p-3">{currency(p.cost)}</td><td className="p-3">{currency(p.price)}</td><td className="p-3">{p.stock}</td><td className="p-3">{p.minStock}</td><td className="p-3">{isFinite(margin)?margin.toFixed(0)+'%':'—'}</td><td className="p-3 text-right"><div className="flex gap-2 justify-end"><button className="px-3 py-2 rounded-xl border hover:bg-gray-50" onClick={()=>onEdit(p)}>Editar</button><button className="px-3 py-2 rounded-xl border hover:bg-gray-50" onClick={()=>onDelete(p.id)}>Eliminar</button></div></td></tr>; })}{filtered.length===0 && <tr><td className="p-6 text-center text-gray-500" colSpan="10">Sin resultados</td></tr>}</tbody></table></div></div>; }
  // Taller simple (preview)
  function useOrders(){ const [orders,setOrders]=useState(()=>{ try{const raw=localStorage.getItem('unikOrdersV1'); return raw?JSON.parse(raw):[]}catch{return []} }); useEffect(()=>{ localStorage.setItem('unikOrdersV1', JSON.stringify(orders)); },[orders]); const nextOrderNumber=useMemo(()=>{ const max=orders.reduce((m,o)=>Math.max(m,Number((o.number||'').split('-')[1]||0)),0); return 'UNK-'+String(max+1).padStart(4,'0'); },[orders]); function createOrder(payload){ const o={ id:uid(), number:nextOrderNumber, dateISO:new Date().toISOString(), customerName:payload.customerName?.trim()||'', customerContact:payload.customerContact?.trim()||'', bikeModel:payload.bikeModel?.trim()||'', workDesc:payload.workDesc?.trim()||'', estimate:parseNumber(payload.estimate||0), dueDateISO:payload.dueDateISO||'', status:'Pendiente', timeline:[{ts:new Date().toISOString(),by:'sistema',action:'Orden creada'}], messages:[] }; setOrders(prev=>[o,...prev]); } function updateOrderStatus(id,status){ setOrders(prev=>prev.map(o=>o.id===id?{...o,status,timeline:[...o.timeline,{ts:new Date().toISOString(),by:'mecánico',action:`Estado → ${status}` }]}:o)); } function addOrderMessage(id,msg){ setOrders(prev=>prev.map(o=>o.id===id?{...o,messages:[{id:uid(),ts:new Date().toISOString(),author:msg.author,text:msg.text,audioDataURL:msg.audioDataURL},...o.messages]}:o)); } function deleteOrder(id){ setOrders(prev=>prev.filter(o=>o.id!==id)); } return {orders,nextOrderNumber,createOrder,updateOrderStatus,addOrderMessage,deleteOrder}; }
  async function recordAudio(seconds=15){ const media=await navigator.mediaDevices.getUserMedia({audio:true}); const rec=new MediaRecorder(media); const chunks=[]; return new Promise((resolve)=>{ rec.ondataavailable=e=>chunks.push(e.data); rec.onstop=()=>{ const blob=new Blob(chunks,{type:'audio/webm'}); const fr=new FileReader(); fr.onloadend=()=>resolve(fr.result); fr.readAsDataURL(blob); }; rec.start(); setTimeout(()=>rec.stop(), seconds*1000); }); }
  function OrdersView(){ const {orders,nextOrderNumber,createOrder,updateOrderStatus,addOrderMessage,deleteOrder}=useOrders(); const [showNew,setShowNew]=useState(false); const [filter,setFilter]=useState(''); const filtered=orders.filter(o=>!filter || o.status===filter); function OrderForm({onClose}){ const [customerName,setCustomerName]=useState(''); const [customerContact,setCustomerContact]=useState(''); const [bikeModel,setBikeModel]=useState(''); const [workDesc,setWorkDesc]=useState(''); const [estimate,setEstimate]=useState(''); const [dueDateISO,setDueDateISO]=useState(''); return <form className="grid sm:grid-cols-2 gap-3" onSubmit={(e)=>{e.preventDefault(); createOrder({customerName,customerContact,bikeModel,workDesc,estimate,dueDateISO}); onClose();}}><Input label="Cliente" value={customerName} onChange={setCustomerName}/><Input label="Contacto (tel/DNI)" value={customerContact} onChange={setCustomerContact}/><Input label="Bicicleta (marca/modelo)" value={bikeModel} onChange={setBikeModel}/><NumberInput label="Presupuesto (ARS)" value={estimate} onChange={setEstimate}/><label className="sm:col-span-2 block"><span className="text-xs uppercase">Trabajo a realizar</span><textarea className="mt-1 w-full rounded-xl border px-3 py-2" rows="4" value={workDesc} onChange={e=>setWorkDesc(e.target.value)} /></label><Input label="Fecha estimada de retiro" type="date" value={dueDateISO} onChange={setDueDateISO}/><div className="sm:col-span-2 flex gap-2 justify-end"><button type="button" onClick={onClose} className="px-4 py-2 rounded-xl border hover:bg-gray-50">Cancelar</button><button type="submit" className="px-4 py-2 rounded-xl bg-black">Crear orden</button></div></form>; } function MessageBox({order}){ const [text,setText]=useState(''); const [recording,setRecording]=useState(false); async function handleRecord(){ setRecording(true); try{ const url=await recordAudio(15); addOrderMessage(order.id,{author:'mecánico',audioDataURL:url}); } finally{ setRecording(false);} } return <div className="flex gap-2"><input className="w-full rounded-xl border px-3 py-2" placeholder="Escribir mensaje…" value={text} onChange={e=>setText(e.target.value)}/><button className="px-3 py-2 rounded-xl border hover:bg-gray-50" onClick={()=>{ if(!text.trim())return; addOrderMessage(order.id,{author:'mecánico',text}); setText('');}}>Enviar</button><button className="px-3 py-2 rounded-xl border hover:bg-gray-50" disabled={recording} onClick={handleRecord}>{recording?'Grabando…':'🎙️ Audio'}</button></div>; } function OrderRow({o}){ const qrURL='https://api.qrserver.com/v1/create-qr-code/?size=120x120&data='+encodeURIComponent('unikbikes://orden/'+o.id); return <tr className="border-t"><td className="p-3">{o.number}</td><td className="p-3">{o.customerName}<div className="text-xs">{o.customerContact}</div></td><td className="p-3">{o.bikeModel}</td><td className="p-3">{o.workDesc.slice(0,40)}{o.workDesc.length>40?'…':''}</td><td className="p-3">{currency(o.estimate)}</td><td className="p-3 whitespace-nowrap">{o.dueDateISO? new Date(o.dueDateISO).toLocaleDateString():'—'}</td><td className="p-3"><Badge>{o.status}</Badge></td><td className="p-3 text-right"><div className="flex gap-2 justify-end"><button className="px-3 py-2 rounded-xl border hover:bg-gray-50" onClick={()=>updateOrderStatus(o.id, o.status==='Pendiente'?'En reparación': o.status==='En reparación'?'Lista':'Entregada')}>Avanzar estado</button><a className="px-3 py-2 rounded-xl border hover:bg-gray-50" target="_blank" rel="noreferrer" href={qrURL}>QR</a><button className="px-3 py-2 rounded-xl border hover:bg-gray-50" onClick={()=>deleteOrder(o.id)}>Eliminar</button></div></td></tr>; }
    return <div className="space-y-3"><div className="flex gap-2 items-center"><button className="px-4 py-2 rounded-xl bg-black" onClick={()=>setShowNew(true)}>+ Nueva orden</button><select className="rounded-xl border px-3 py-2" value={filter} onChange={e=>setFilter(e.target.value)}><option value="">Todos</option><option>Pendiente</option><option>En reparación</option><option>Lista</option><option>Entregada</option><option>Cancelada</option></select></div><div className="overflow-auto rounded-2xl border"><table className="min-w-full text-sm"><thead className="bg-gray-50 text-left"><tr><th className="p-3">#</th><th className="p-3">Cliente</th><th className="p-3">Bici</th><th className="p-3">Trabajo</th><th className="p-3">Presupuesto</th><th className="p-3">Retiro</th><th className="p-3">Estado</th><th className="p-3 text-right">Acciones</th></tr></thead><tbody>{filtered.map(o=>(<OrderRow key={o.id} o={o}/>))}{filtered.length===0 && <tr><td className="p-6 text-center text-gray-500" colSpan="8">Sin órdenes</td></tr>}</tbody></table></div><Modal open={showNew} onClose={()=>setShowNew(false)} title={"Nueva orden ("+nextOrderNumber+")"}><OrderForm onClose={()=>setShowNew(false)}/></Modal></div>; }
  function App(){ const store=useStore(); const {products,movements,upsertProduct,deleteProduct,addMovement}=store; const [tab,setTab]=useState('inventario'); const [search,setSearch]=useState(''); const [categoryFilter,setCategoryFilter]=useState(''); const [showProductModal,setShowProductModal]=useState(false); const [editProduct,setEditProduct]=useState(null); const [showMovementModal,setShowMovementModal]=useState(false); const totals=useMemo(()=>{ const stockValue=products.reduce((a,p)=>a+p.cost*p.stock,0); const retailValue=products.reduce((a,p)=>a+p.price*p.stock,0); const lowStock=products.filter(p=>p.stock<=p.minStock).length; const last30=movements.filter(m=> Date.now()-new Date(m.dateISO).getTime()<=1000*60*60*24*30); const soldUnits=last30.filter(m=>m.type==='Salida').reduce((a,m)=>a+m.quantity,0); const entradas=last30.filter(m=>m.type==='Entrada').reduce((a,m)=>a+m.quantity,0); return {stockValue,retailValue,lowStock,soldUnits,entradas}; },[products,movements]); useEffect(()=>{ if(products.length===0 && !sessionStorage.getItem('demoPromptShown')){ sessionStorage.setItem('demoPromptShown','1'); const demo=[ { id: uid(), sku:'CAM-20-16-48', name:'Cámara 20" x 1.75/2.125 VA', category:'Cámaras', supplier:'Mayorista Norte', cost:2500, price:5900, stock:18, minStock:6, notes:'Alta rotación' }, { id: uid(), sku:'CUB-700x28-REF', name:'Cubierta 700x28 Antipinchazo', category:'Cubiertas', supplier:'Distribuidor Centro', cost:18500, price:34990, stock:8, minStock:4, notes:'Con refuerzo' }, { id: uid(), sku:'CAD-HG40', name:'Cadena Shimano HG40 6/7/8v', category:'Transmisión', supplier:'Shimano AR', cost:12000, price:23990, stock:12, minStock:5, notes:'Incluye perno' }, { id: uid(), sku:'FRE-TEK-PAD', name:'Pastillas Tektro Metálicas', category:'Frenos', supplier:'Tektro Dealer', cost:5500, price:11990, stock:9, minStock:4, notes:'MT200/MT400' }, { id: uid(), sku:'BICI-VENZO-GRAV', name:'Venzo Gravel R300 18v', category:'Bicicletas', supplier:'Venzo', cost:750000, price:1050000, stock:2, minStock:1, notes:'Incluye postventa' }, ]; store.setProducts(demo);} },[]); function handleExportInventoryCSV(){ const rows=[['SKU','Nombre','Categoría','Proveedor','Costo','Precio','Stock','Mínimo','Notas']].concat(products.map(p=>[p.sku,p.name,p.category,p.supplier,p.cost,p.price,p.stock,p.minStock,p.notes])); exportCSV(rows,'inventario_'+new Date().toISOString().slice(0,10)+'.csv'); } function handleExportPriceListCSV(){ const rows=[['SKU','Producto','Precio']].concat(products.map(p=>[p.sku,p.name,p.price])); exportCSV(rows,'lista_precios_'+new Date().toISOString().slice(0,10)+'.csv'); } function handleBackupJSON(){ const payload=JSON.stringify({products,movements},null,2); download('backup_bicicleteria_'+new Date().toISOString().slice(0,10)+'.json',payload); } async function handleRestoreJSON(){ const input=document.createElement('input'); input.type='file'; input.accept='.json,application/json'; input.onchange=async()=>{ const file=input.files?.[0]; if(!file) return; const text=await file.text(); try{ const data=JSON.parse(text); store.setProducts(data.products??[]); store.setMovements(data.movements??[]);}catch(e){ alert('Formato inválido'); } }; input.click(); } const lowStockList=products.filter(p=>p.stock<=p.minStock); return <div className="min-h-screen"><header className="sticky top-0 z-40 border bg-white/80 backdrop-blur"><div className="mx-auto max-w-7xl px-4 py-4 flex items-center gap-3"><div className="size-9 rounded-2xl bg-black text-white" style={{display:'grid',placeContent:'center'}}>🚲</div><div><h1 className="text-xl font-bold">Unik Bikes — Vista previa</h1><p className="text-xs">Inventario, Movimientos, Lista y Taller</p></div><div className="ml-auto flex gap-2"><button onClick={handleBackupJSON} className="px-3 py-2 rounded-xl border hover:bg-gray-50">Respaldo</button><button onClick={handleRestoreJSON} className="px-3 py-2 rounded-xl border hover:bg-gray-50">Restaurar</button></div></div></header><main className="mx-auto max-w-7xl px-4 pb-24"><section className="grid grid-cols-2 sm:grid-cols-2 lg:grid-cols-5 gap-3 pt-4"><div className="rounded-2xl border p-4"><div className="text-xs">Valor a costo</div><div className="text-lg font-semibold">{currency(totals.stockValue)}</div></div><div className="rounded-2xl border p-4"><div className="text-xs">Valor a precio</div><div className="text-lg font-semibold">{currency(totals.retailValue)}</div></div><div className="rounded-2xl border p-4"><div className="text-xs">Bajo stock</div><div className="text-lg font-semibold">{totals.lowStock}</div></div><div className="rounded-2xl border p-4"><div className="text-xs">Salidas (30 días)</div><div className="text-lg font-semibold">{totals.soldUnits}</div></div><div className="rounded-2xl border p-4"><div className="text-xs">Entradas (30 días)</div><div className="text-lg font-semibold">{totals.entradas}</div></div></section><nav className="mt-6 mb-4 flex flex-wrap gap-2">{[['inventario','Inventario'],['mov','Movimientos'],['lista','Lista de precios'],['taller','Taller (órdenes)'],['alertas','Alertas']].map(([k,l])=>(<button key={k} onClick={()=>setTab(k)} className={'px-4 py-2 rounded-xl border '+(tab===k?'bg-black text-white':'hover:bg-gray-50')}>{l}</button>))}<div className="ml-auto flex gap-2">{tab==='inventario' && (<><button onClick={()=>{setEditProduct(null); setShowProductModal(true);}} className="px-4 py-2 rounded-xl bg-black">+ Producto</button><button onClick={()=>setShowMovementModal(true)} className="px-4 py-2 rounded-xl border hover:bg-gray-50">+ Movimiento</button><button onClick={handleExportInventoryCSV} className="px-4 py-2 rounded-xl border hover:bg-gray-50">Exportar CSV</button></>)}{tab==='lista' && (<button onClick={handleExportPriceListCSV} className="px-4 py-2 rounded-xl border hover:bg-gray-50">Exportar Lista CSV</button>)}</div></nav>{tab==='inventario' && <InventoryTable products={products} onEdit={(p)=>{setEditProduct(p); setShowProductModal(true);}} onDelete={(id)=>deleteProduct(id)} search={search} setSearch={setSearch} categoryFilter={categoryFilter} setCategoryFilter={setCategoryFilter}/>} {tab==='mov' && <div className="space-y-3"><div className="flex gap-2 justify-end"><button onClick={()=>setShowMovementModal(true)} className="px-4 py-2 rounded-xl bg-black">+ Registrar movimiento</button></div><div className="overflow-auto rounded-2xl border"><table className="min-w-full text-sm"><thead className="bg-gray-50 text-left"><tr><th className="p-3">Fecha</th><th className="p-3">Tipo</th><th className="p-3">Producto</th><th className="p-3">Cantidad</th><th className="p-3">Precio Unit.</th><th className="p-3">Referencia</th><th className="p-3">Notas</th></tr></thead><tbody>{store.movements.map(m=>{ const prod=products.find(p=>p.id===m.productId); return <tr key={m.id} className="border-t"><td className="p-3 whitespace-nowrap">{new Date(m.dateISO).toLocaleString()}</td><td className="p-3"><Badge>{m.type}</Badge></td><td className="p-3">{prod?.name ?? '—'}</td><td className="p-3">{m.quantity}</td><td className="p-3">{m.unitPrice?currency(m.unitPrice):'—'}</td><td className="p-3">{m.reference||'—'}</td><td className="p-3">{m.notes||''}</td></tr>})}{store.movements.length===0 && <tr><td className="p-6 text-center text-gray-500" colSpan="7">Sin movimientos</td></tr>}</tbody></table></div></div>} {tab==='lista' && <div className="overflow-auto rounded-2xl border"><table className="min-w-full text-sm"><thead className="bg-gray-50 text-left"><tr><th className="p-3">SKU</th><th className="p-3">Producto</th><th className="p-3">Precio</th></tr></thead><tbody>{products.map(p=>(<tr key={p.id} className="border-t"><td className="p-3">{p.sku}</td><td className="p-3">{p.name}</td><td className="p-3">{currency(p.price)}</td></tr>))}{products.length===0 && <tr><td className="p-6 text-center text-gray-500" colSpan="3">Sin productos</td></tr>}</tbody></table></div>} {tab==='taller' && <OrdersView/>} {tab==='alertas' && <div className="space-y-3"><div className="rounded-2xl border p-4"><h3 className="font-semibold mb-2">Productos con stock bajo</h3>{lowStockList.length===0 ? <p className="text-sm text-gray-500">No hay productos en nivel de alerta.</p> : <ul className="space-y-2">{lowStockList.map(p=>(<li key={p.id} className="flex items-center justify-between gap-2"><div><div className="font-medium">{p.name} <span className="text-xs">({p.sku})</span></div><div className="text-xs">Stock: {p.stock} / Mínimo: {p.minStock} — Proveedor: {p.supplier||'—'}</div></div><Badge>Reponer</Badge></li>))}</ul>}</div></div>} </main><Modal open={showProductModal} onClose={()=>setShowProductModal(false)} title={editProduct?'Editar producto':'Nuevo producto'}><ProductForm initial={editProduct} onCancel={()=>setShowProductModal(false)} onSubmit={(p)=>{upsertProduct(p); setShowProductModal(false); setEditProduct(null);}}/></Modal><Modal open={showMovementModal} onClose={()=>setShowMovementModal(false)} title="Registrar movimiento"><MovementForm products={products} onCancel={()=>setShowMovementModal(false)} onSubmit={(m)=>{addMovement(m); setShowMovementModal(false);}}/></Modal><footer className="p-4 text-center text-xs text-gray-500">Hecho para Unik Bikes — Vista previa sin servidor (datos guardados en este navegador).</footer></div>; }
  ReactDOM.createRoot(document.getElementById('root')).render(<App/>);
  </script>
</body>
</html>
